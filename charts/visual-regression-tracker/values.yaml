nameOverride: ""
fullnameOverride: ""

imagePullSecrets: []

vrtConfig:
  appFrontendUrl: "http://localhost:8080"
  bodyParserJsonLimit: "5mb"
  defaults:
    apiKey: "DEFAULT_USER_API_KEY_TO_BE_CHANGED"
    email: "admin@example.com"
    pass: "Change_Me"
    project: "Default"
  elasticsearch:
    host: ""
    pass: ""
    port: 9200
    schema: http
    user: ""
  jwt:
    pass: "jwtPrivateKey"
    lifeTime: "1d"
  postgresql:
    # enable/disable postgresql chart dependency
    enabled: true
    # needs to be the same as the postgresql.auth.password
    db: vrt
    # host env var is only used when vrtConfig.postgresql.enabled is false
    host: vrt-postgresql
    pass: "vrt-db-password"
    # needs to be the same as the postgresql.auth.database
    port: 5432
    # needs to be the same as the postgresql.auth.username
    user: vrt
  reactAppApiUrl: "http://localhost:4200"

vrtComponents:
  api:
    image:
      repository: visualregressiontracker/api
      pullPolicy: IfNotPresent
      tag: "5.0.4"

    ingress:
      enabled: false
      className: ""
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      hosts:
        - host: chart-example.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 512Mi
      # requests:
      #   cpu: 100m
      #   memory: 512Mi

    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      privileged: false

    service:
      type: ClusterIP
      port: 4200

  migration:
    image:
      repository: visualregressiontracker/migration
      pullPolicy: IfNotPresent
      tag: "5.0.1"

    imagePullSecrets: []

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      privileged: false

  ui:
    image:
      repository: visualregressiontracker/ui
      pullPolicy: IfNotPresent
      tag: "5.0.2"

    ingress:
      enabled: false
      className: ""
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      hosts:
        - host: chart-example.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
          - ALL
      privileged: false

    service:
      type: ClusterIP
      port: 8080

    tmpDirVolume:
      emptyDir:
        sizeLimit: 100Mi

# Configuration for persistence
persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## If defined, PVC must be created manually before volume will be bound
  ## The value is evaluated as a template, so, for example, the name can depend on .Release or .Chart
  ##
  # existingClaim:
  accessModes:
    - ReadWriteOnce
  storageClass: ""
  size: 10Gi
  annotations: {}

secrets:
  defaults:
    useExisting: false
    secretName: vrt
    secretKey: seed.ts
  elasticsearch:
    useExisting: false
    secretKey: es-pass
    secretName: es-pass
  jwt:
    useExisting: false
    secretKey: jwt-pass
    secretName: jwt-pass
  postgresql:
    useExisting: false
    secretKey: pg-pass
    secretName: pg-pass

nodeSelector: {}

tolerations: []

affinity: {}

topologySpreadConstraints: []

podAnnotations: {}

podLabels: {}

podDisruptionBudget: {}
  # maxUnavailable: 1

podSecurityContext:
  fsGroup: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: RuntimeDefault

# if used > 1 you need a ReadWriteMany storageclass
replicaCount: 1

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# dependency chart config
postgresql:
  auth:
    database: vrt
    username: vrt
    password: vrt-db-password
  fullnameOverride: vrt-postgresql
  resources: {}
    # limits:
    #   cpu: 50m
    #   memory: 64Mi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi
