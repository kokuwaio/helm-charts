apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "visual-regression-tracker.fullname" . }}-auth
  labels:
    {{- include "visual-regression-tracker.labels" . | nindent 4 }}
    component: auth-proxy
spec:
  replicas: {{ .Values.authProxy.replicaCount }}
  selector:
    matchLabels:
      {{- include "visual-regression-tracker.selectorLabels" . | nindent 6 }}
      component: auth-proxy
  template:
    metadata:
      {{- with .Values.authProxy.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "visual-regression-tracker.labels" . | nindent 8 }}
        {{- with .Values.authProxy.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        component: auth-proxy
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "visual-regression-tracker.serviceAccountName" . }}
      initContainers:
        - name: create-basic-auth
          command: 
            - htpasswd
            - -b
            - -c
            - /tmp/htpass
            - {{ .Values.authProxy.basicAuth.username }}
            - $(AUTH_SECRET)
          env:
            - name: AUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "visual-regression-tracker.authProxySecretName" . }}
                  key: {{ .Values.secrets.authProxy.secretKey }}
          securityContext:
            {{- toYaml .Values.authProxy.initContainer.securityContext | nindent 12 }}
          image: "{{ .Values.authProxy.initContainer.image.repository }}:{{ .Values.authProxy.initContainer.image.tag }}"
          imagePullPolicy: {{ .Values.authProxy.image.pullPolicy }}
          resources:
            {{- toYaml .Values.authProxy.initContainer.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: tmpdir
      containers:
        - name: auth-proxy
          securityContext:
            {{- toYaml .Values.authProxy.securityContext | nindent 12 }}
          image: "{{ .Values.authProxy.image.repository }}:{{ .Values.authProxy.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.authProxy.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.authProxy.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            failureThreshold: 3
          resources:
            {{- toYaml .Values.authProxy.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /tmp
              name: tmpdir
            - name: auth
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              readOnly: true
      securityContext:
        {{- toYaml .Values.authProxy.podSecurityContext | nindent 8 }}
      volumes:
        - name: tmpdir
          emptyDir:
            sizeLimit: {{ .Values.authProxy.tmpDirSizeLimit }}
        - name: auth
          configMap:
              defaultMode: 420
              name: {{ include "visual-regression-tracker.fullname" . }}-auth
      {{- with .Values.authProxy.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.authProxy.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.authProxy.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
