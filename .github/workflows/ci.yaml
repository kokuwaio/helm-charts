name: ci

on: 
  pull_request:
    paths:
      - 'charts/**/**'

env:
  helm-version: "v3.9.0"
  kubeval-version: "v0.16.1"

jobs:
  lint-chart:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Helm
        uses: azure/setup-helm@v3.3
        with:
          version: "${{ env.helm-version }}"
      - uses: actions/setup-python@v4.2.0
        with:
          python-version: 3.7
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.0
      - name: Run chart-testing (lint)
        run: ct lint --config .github/ct.yaml

  super-linter:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_JSCPD: false
          VALIDATE_KUBERNETES_KUBEVAL: false
          VALIDATE_YAML: false

  kubeval-chart:
    runs-on: ubuntu-20.04
    needs:
      - lint-chart
    strategy:
      matrix:
        k8s:
          - v1.21.10
          - v1.22.7
          - v1.23.5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Helm
        uses: azure/setup-helm@v3.3
        with:
          version: "${{ env.helm-version }}"
      - name: Run kubeval
        env:
          KUBERNETES_VERSION: ${{ matrix.k8s }}
          KUBEVAL_VERSION: "${{ env.kubeval-version }}"
        run: .github/kubeval.sh

  install-chart:
    name: install-chart
    runs-on: ubuntu-20.04
    needs: 
      - kubeval-chart
    strategy:
      matrix:
        k8s:
          - v1.21.10
          - v1.22.7
          - v1.23.5
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Helm
        uses: azure/setup-helm@v3.3
        with:
          version: "${{ env.helm-version }}"
      - uses: actions/setup-python@v4.2.0
        with:
          python-version: 3.7
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.3.0
      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config .github/ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
      - name: Create kind cluster
        uses: helm/kind-action@v1.3.0
        if: steps.list-changed.outputs.changed == 'true'
        with:
          config: .github/kind-config.yaml
          node_image: kindest/node:${{ matrix.k8s }}
      - name: Run chart-testing (install)
        run: ct install --config .github/ct.yaml
